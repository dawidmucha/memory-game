{"version":3,"sources":["../../memory-game2/src/reducers/reducers.js","../../memory-game2/src/store/store.js","../../memory-game2/src/actions/actions.js","../../memory-game2/src/components/menu/Menu.js","../../memory-game2/src/components/game/card/Card.js","../../memory-game2/src/components/game/Game.js","../../memory-game2/src/components/endscreen/EndScreen.js","../../memory-game2/src/App.js","../../memory-game2/src/serviceWorker.js","../../memory-game2/src/index.js"],"names":["initialState","screen","sizeWidth","undefined","sizeHeight","gameState","timer","tile1","tile2","clearClicked","memoryGame","state","arguments","length","action","type","Object","assign","moment","key","clearclicked","store","createStore","window","__REDUX_DEVTOOLS_EXTENSION__","changeSize","clickCard","declickCard","Menu","_this","classCallCheck","this","possibleConstructorReturn","getPrototypeOf","call","widthChange","bind","assertThisInitialized","heightChange","handleSubmit","e","setState","parseInt","target","value","preventDefault","_this$state","dispatch","react_default","a","createElement","id","onSubmit","min","max","onChange","step","defaultValue","React","Component","connect","size","Card","props","handleCardClick","getState","pair","active","console","log","checkPair","noCardClassHandler","className","concat","pic","onClick","Game","cards","map","card","ref","current","setTimeout","game_card_Card","createRef","outcome","formula","_this2","noPics","slice","i","rand","Math","ceil","random","splice","_loop","w","_loop2","h","toConsumableArray","fieldSize","filter","init","now","diff","cardRender","push","EndScreen","App","subscribe","game","components_game_Game","components_menu_Menu","components_endscreen_EndScreen","Boolean","location","hostname","match","ReactDOM","render","es","src_App_0","document","getElementById","navigator","serviceWorker","ready","then","registration","unregister"],"mappings":"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","file":"static/js/main.1735154c.chunk.js","sourcesContent":["import moment from 'moment'\r\n\r\nconst initialState = {\r\n\tscreen: 'menu',\r\n\tsizeWidth: undefined,\r\n\tsizeHeight: undefined,\r\n\tgameState: 0,\r\n\ttimer: 0,\r\n\ttile1: undefined,\r\n\ttile2: undefined,\r\n\tclearClicked: false\r\n}\r\n\r\nconst memoryGame = (state = initialState, action) => {\r\n\tswitch(action.type) {\r\n\t\tcase 'CHANGE_SIZE':\r\n\t\t\treturn Object.assign({}, state, {\r\n\t\t\t\tsizeWidth: action.sizeWidth,\r\n\t\t\t\tsizeHeight: action.sizeHeight\r\n\t\t\t})\r\n\r\n\t\tcase 'TOGGLE_GAME':\r\n\t\t\tif (state.screen === 'menu')  {\r\n\t\t\t\treturn Object.assign({}, state, {\r\n\t\t\t\t\tscreen: 'game',\r\n\t\t\t\t\tgameState: 1,\r\n\t\t\t\t\ttimer: moment()\r\n\t\t\t\t})\r\n\t\t\t} else if(state.screen === 'game') {\r\n\t\t\t\treturn Object.assign({}, state, {\r\n\t\t\t\t\tscreen: 'endscreen',\r\n\t\t\t\t\tgameState: 0\r\n\t\t\t\t})\r\n\t\t\t} else if(state.screen === 'endscreen') {\r\n\t\t\t\treturn Object.assign({}, state, {\r\n\t\t\t\t\tscreen: 'menu',\r\n\t\t\t\t\tgameState: 0,\r\n\t\t\t\t\ttimer: 0\r\n\t\t\t\t})\r\n\t\t\t}\r\n\t\t\tbreak\r\n\r\n\t\tcase 'CLICK_CARD':\r\n\t\t\tif(state.gameState === 1) {\r\n\t\t\t\treturn Object.assign({}, state, {\r\n\t\t\t\t\tgameState: state.gameState + 1,\r\n\t\t\t\t\ttile1: action.key\r\n\t\t\t\t})\r\n\t\t\t}\telse if(state.gameState === 2) {\r\n\t\t\t\treturn Object.assign({}, state, {\r\n\t\t\t\t\tgameState: state.gameState + 1,\r\n\t\t\t\t\ttile2: action.key\r\n\t\t\t\t})\r\n\t\t\t} else {\r\n\t\t\t\treturn Object.assign({}, state, {\r\n\t\t\t\t\tgameState: 1\r\n\t\t\t\t})\r\n\t\t\t}\r\n\r\n\t\tcase 'CLEAR_CLICKED':\r\n\t\t\treturn Object.assign({}, state, {\r\n\t\t\t\tclearClicked: !state.clearclicked,\r\n\t\t\t\ttile1: undefined,\r\n\t\t\t\ttile2: undefined\r\n\t\t\t}) \r\n\r\n\t\tcase 'DECLICK_CARD':\r\n\t\t\treturn Object.assign({}, state, {\r\n\t\t\t\tgameState: state.gameState - 2,\r\n\t\t\t\ttile1: undefined,\r\n\t\t\t\ttile2: undefined\r\n\t\t\t})\r\n\t\t\t\r\n\t\tdefault:\r\n\t\t\treturn state\r\n\t}\r\n}\r\n\r\nexport default memoryGame","import { createStore } from 'redux'\r\nimport memoryGame from '../reducers/reducers'\r\n\r\nconst store = createStore(memoryGame, window.__REDUX_DEVTOOLS_EXTENSION__ && window.__REDUX_DEVTOOLS_EXTENSION__())\r\n\r\nexport default store","const changeSize = (sizeWidth, sizeHeight) => ({\r\n\ttype: 'CHANGE_SIZE',\r\n\tsizeWidth,\r\n\tsizeHeight\r\n})\r\n\r\nconst toggleGame = () => ({\r\n\ttype: 'TOGGLE_GAME'\r\n})\r\n\r\nconst clickCard = (key) => ({\r\n\ttype: 'CLICK_CARD',\r\n\tkey\r\n})\r\n\r\nconst clearClicked = () => ({\r\n\ttype: 'CLEAR_CLICKED'\r\n})\r\n\r\nconst declickCard = () => ({\r\n\ttype: 'DECLICK_CARD'\r\n})\r\n\r\nexport { changeSize, toggleGame, clickCard, clearClicked, declickCard } ","import React from 'react'\r\nimport { connect } from 'react-redux'\r\nimport { changeSize, toggleGame } from '../../actions/actions'\r\nimport store from '../../store/store';\r\nimport './Menu.css'\r\n\r\nconst mapDispatchToProps = (dispatch) => {\r\n\treturn {\r\n\t\tchangeSize: size => dispatch(changeSize(size))\r\n\t}\r\n} \r\n\r\nclass Menu extends React.Component {\r\n\tconstructor() {\r\n\t\tsuper()\r\n\r\n\t\tthis.state = {\r\n\t\t\tsizeWidth: 4,\r\n\t\t\tsizeHeight: 3\r\n\t\t}\r\n\r\n\t\tthis.widthChange = this.widthChange.bind(this)\r\n\t\tthis.heightChange = this.heightChange.bind(this)\r\n\t\tthis.handleSubmit = this.handleSubmit.bind(this)\r\n\t}\r\n\r\n\twidthChange(e) {\r\n\t\tthis.setState({ sizeWidth: parseInt(e.target.value) })\r\n\t}\r\n\r\n\theightChange(e) {\r\n\t\tthis.setState({ sizeHeight: parseInt(e.target.value) })\r\n\t}\r\n\r\n\thandleSubmit(e) {\r\n\t\te.preventDefault();\r\n\t\tconst { sizeWidth, sizeHeight } = this.state\r\n\t\tstore.dispatch(changeSize(sizeWidth, sizeHeight))\r\n\t\tstore.dispatch(toggleGame())\r\n\t}\r\n\r\n\trender() {\r\n\t\treturn (\r\n\t\t\t<div id='menuContainer'>\r\n\t\t\t\t<h1>Memory Game</h1>\r\n\t\t\t\t<form onSubmit={this.handleSubmit}>\r\n\t\t\t\t\t<div>\r\n\t\t\t\t\t\tHeight: {this.state.sizeWidth} <input type='range' min='4' max='8' onChange={this.widthChange} step='2' defaultValue='4' /><br /><br />\r\n\t\t\t\t\t\tWidth: {this.state.sizeHeight} <input type='range' min='3' max='8' onChange={this.heightChange} defaultValue='3' /><br />\r\n\t\t\t\t\t</div>\r\n\t\t\t\t\t<button type='submit'>START</button>\r\n\t\t\t\t</form>\r\n\t\t\t</div>\r\n\t\t)\r\n\t}\r\n}\r\n\r\nexport default connect(null, mapDispatchToProps)(Menu)","import React from 'react'\r\nimport './Card.css'\r\nimport { clickCard, declickCard } from '../../../actions/actions'\r\nimport store from '../../../store/store';\r\n\r\nclass Card extends React.Component {\r\n\tconstructor(props) {\r\n\t\tsuper(props)\r\n\r\n\t\tthis.state = {\r\n\t\t\tactive: false,\r\n\t\t\tpair: false,\r\n\t\t\tnoCardClassHandler: ''\r\n\t\t}\r\n\r\n\t\tthis.handleCardClick = this.handleCardClick.bind(this)\r\n\t}\r\n\r\n\tcomponentDidUpdate() {\r\n\t\tif(this.props.pair === true && this.state.pair === false) { // if pair was found\r\n\t\t\tthis.setState({ \r\n\t\t\t\tnoCardClassHandler: 'noCard',\r\n\t\t\t\tpair: true\r\n\t\t\t})\r\n\t\t} else if(store.getState().clearClicked === true) { // if pair was not found\r\n\t\t\tthis.props.clearClicked();\r\n\t\t\tstore.getState().clearClicked = false;\r\n\t\t}\r\n\t}\r\n\r\n\tclearClicked() {\r\n\t\tif(this.state.noCardClassHandler === '') this.setState({active: false})\r\n\t}\r\n\r\n\thandleCardClick = () => {\r\n\t\tif(store.getState().gameState !== 3 && this.props.pair === false) {\r\n\t\t\tthis.setState({ active: !this.state.active })\r\n\t\t\tconsole.log('about to dispatch this mofo')\r\n\t\t\tstore.dispatch(clickCard(parseInt(this.props.id)))\r\n\r\n\t\t\tif(store.getState().gameState === 3 && !!store.getState().tile1 && !!store.getState().tile2) {\r\n\t\t\t\tif(store.getState().tile1 === store.getState().tile2) {\r\n\t\t\t\t\tconsole.log('you clicked the same card you dumbo') // you created new reducer for declicking a card. now you have to CLICK_CARD when different cards are clicked and DECLICK_CARD when the same one is cliced\r\n\t\t\t\t\tstore.dispatch(declickCard(parseInt(this.props.id)))\r\n\t\t\t\t} else this.props.checkPair()\r\n\t\t\t}\r\n\t\t}\r\n\t}\r\n\r\n\trender() {\r\n\t\treturn (\r\n\t\t\t<div className={this.state.active ? `Card face${[this.props.pic]} ${this.state.noCardClassHandler}` : `Card ${this.state.noCardClassHandler}` } onClick={this.handleCardClick}>\r\n\t\t\t</div>\r\n\t\t)\r\n\t}\r\n}\r\n\r\nexport default Card","import moment from 'moment';\r\nimport React from 'react'\r\nimport store from '../../store/store'\r\nimport Card from './card/Card'\r\nimport { clickCard, toggleGame } from '../../actions/actions'\r\nimport './Game.css'\r\n\r\nclass Game extends React.Component {\r\n\tconstructor(props) {\r\n\t\tsuper(props)\r\n\r\n\t\tthis.state = {\r\n\t\t\tsizeWidth: store.getState().sizeWidth || 3,\r\n\t\t\tsizeHeight: store.getState().sizeHeight || 4,\r\n\t\t\toutcome: [],\r\n\t\t\tcards: []\r\n\t\t}\r\n\t}\r\n\r\n\tcomponentDidMount() {\r\n\t\tconst noEls = this.state.sizeWidth * this.state.sizeHeight // number of elements\r\n\t\tconst noPics = noEls / 2 // number of pictures\r\n\t\tlet a = this.state.outcome.slice(); // creates clone of state\r\n\t\t\r\n\t\tfor(let i = 0.5; i <= noPics; i += 0.5) {\r\n\t\t\tlet rand = Math.ceil(Math.random() * a.length)\r\n\t\t\ta.splice(rand, 0, Math.ceil(i))\r\n\t\t}\r\n\r\n\t\tthis.setState({outcome: a})\r\n\r\n\t\tlet formula\r\n\t\r\n\t\tfor(let w = 0; w < this.state.sizeWidth; w++) {\r\n\t\t\tfor(let h = 1; h <= this.state.sizeHeight; h++) { // eslint-disable-next-line\r\n\t\t\t\tthis.setState(state => {\r\n\t\t\t\t\tformula = state.sizeHeight * w + h\r\n\t\t\t\t\treturn {\r\n\t\t\t\t\t\tcards: [...state.cards, <Card ref={React.createRef()} key={`${formula}`} id={`${formula}`} pic={state.outcome[formula-1]} checkPair={this.checkPair.bind(this)} clearClicked={this.clearClicked.bind(this)} pair={false} />]\r\n\t\t\t\t\t}\r\n\t\t\t\t})\r\n\t\t\t}\r\n\t\t}\r\n\t}\r\n\r\n\tcomponentDidUpdate() {\r\n\t\tconst fieldSize = store.getState().sizeWidth * store.getState().sizeHeight\r\n\t\tconst count = this.state.cards.filter(card => {\r\n\t\t\treturn card.props.pair === true\r\n\t\t})\r\n\r\n\t\tif(count.length === fieldSize) { // if game is finished\r\n\t\t\tconst init = store.getState().timer\r\n\t\t\tconst now = moment()\r\n\t\t\tconsole.log('finished in ', now.diff(init, 'seconds', true), 's!')\r\n\t\t\tstore.dispatch(toggleGame())\r\n\t\t}\r\n\t}\r\n\r\n\tclearClicked = () => {\r\n\t\tthis.state.cards.map(card => {\r\n\t\t\treturn card.ref.current.clearClicked()\r\n\t\t})\r\n\t\t// store.getState().clearClied = false\r\n\t}\r\n\r\n\tcheckPair = () => {\r\n\t\tconst tile1 = store.getState().tile1\r\n\t\tconst tile2 = store.getState().tile2\r\n\t\tif(this.state.cards[tile1-1].props.pic === this.state.cards[tile2-1].props.pic) { // if there's a pair\r\n\t\t\tsetTimeout(() => {\r\n\t\t\t\tthis.setState(state => {\r\n\t\t\t\t\treturn state.cards[tile1-1] = <Card ref={React.createRef()} key={state.cards[tile1-1].props.id} id={state.cards[tile1-1].props.id} pic={state.cards[tile1-1].props.pic} checkPair={this.checkPair.bind(this)} clearClicked={this.clearClicked.bind(this)} pair={true} />\r\n\t\t\t\t})\r\n\t\t\t\tthis.setState(state => {\r\n\t\t\t\t\treturn state.cards[tile2-1] = <Card ref={React.createRef()} key={state.cards[tile2-1].props.id} id={state.cards[tile2-1].props.id} pic={state.cards[tile2-1].props.pic} checkPair={this.checkPair.bind(this)} clearClicked={this.clearClicked.bind(this)} pair={true} />\r\n\t\t\t\t})\r\n\t\t\t\tstore.dispatch(clickCard())\r\n\t\t\t}, 250)\t\r\n\t\t} else { // if there's no pair\r\n\t\t\tstore.dispatch(clickCard())\r\n\t\t\tsetTimeout(() => {\r\n\t\t\t\tthis.clearClicked()\r\n\t\t\t\t// store.dispatch(clearClicked())\r\n\t\t\t}, 250)\r\n\t\t}\r\n\t}\r\n\r\n\trender() {\r\n\t\tlet cardRender = []\r\n\t\tfor(let w = 0; w < this.state.sizeWidth; w++) {\r\n\t\t\tfor(let h = 1; h <= this.state.sizeHeight; h++) {\r\n\t\t\t\tcardRender.push(this.state.cards[(this.state.sizeHeight * w + h) - 1])\r\n\t\t\t}\r\n\t\t\tcardRender.push(<br key={`br${w}`} />)\r\n\t\t}\r\n\t\t\r\n\t\treturn (\r\n\t\t\t<div id='cards'>\r\n\t\t\t\t{cardRender}\r\n\t\t\t</div>\r\n\t\t)\r\n\t}\r\n}\r\n\r\nexport default Game","import moment from 'moment'\r\nimport React from 'react'\r\nimport store from '../../store/store'\r\nimport { toggleGame } from '../../actions/actions'\r\nimport './EndScreen.css'\r\n\r\nclass EndScreen extends React.Component {\r\n\trender() {\r\n\t\tconst init = store.getState().timer\r\n\t\tconst now = moment()\r\n\t\tconsole.log(init, now)\r\n\r\n\t\treturn (\r\n\t\t\t<div id='endscreen'>\r\n\t\t\t\t<h1>Congratulations</h1>\r\n\t\t\t\t<p>you finished in {now.diff(init, 'seconds', true)} seconds!</p>\r\n\t\t\t\t<button onClick={() => store.dispatch(toggleGame())}>NEW GAME</button>\r\n\t\t\t</div>\r\n\t\t)\r\n\t}\r\n}\r\n\r\nexport default EndScreen","import React from 'react'\nimport store from './store/store'\nimport Menu from './components/menu/Menu'\nimport Game from './components/game/Game'\nimport EndScreen from './components/endscreen/EndScreen'\nimport { connect } from 'react-redux'\nimport './App.css'\n\nconst mapStateToProps = (state) => {\n  return {\n    game: state.screen\n  }\n}\n\n// eslint-disable-next-line\nconst unsubscribe = store.subscribe(() => console.log(store.getState()))\n\nclass App extends React.Component {\n  constructor(props) {\n    super(props);\n\n    this.state = {\n      game: ''\n    }\n  }\n\n  render() {\n    let game = store.getState().screen\n\n    if(game === 'game') {\n      return <div className='appContainer'><Game /></div>\n    } else if(game === 'menu') {\n      return <div className='appContainer'><Menu /></div>\n    } else if(game === 'endscreen') {\n      return <div className='appContainer'><EndScreen /></div>\n    }\n  }\n}\n\nexport default connect(mapStateToProps)(App)\n","// This optional code is used to register a service worker.\n// register() is not called by default.\n\n// This lets the app load faster on subsequent visits in production, and gives\n// it offline capabilities. However, it also means that developers (and users)\n// will only see deployed updates on subsequent visits to a page, after all the\n// existing tabs open on the page have been closed, since previously cached\n// resources are updated in the background.\n\n// To learn more about the benefits of this model and instructions on how to\n// opt-in, read https://bit.ly/CRA-PWA\n\nconst isLocalhost = Boolean(\n  window.location.hostname === 'localhost' ||\n    // [::1] is the IPv6 localhost address.\n    window.location.hostname === '[::1]' ||\n    // 127.0.0.1/8 is considered localhost for IPv4.\n    window.location.hostname.match(\n      /^127(?:\\.(?:25[0-5]|2[0-4][0-9]|[01]?[0-9][0-9]?)){3}$/\n    )\n);\n\nexport function register(config) {\n  if (process.env.NODE_ENV === 'production' && 'serviceWorker' in navigator) {\n    // The URL constructor is available in all browsers that support SW.\n    const publicUrl = new URL(process.env.PUBLIC_URL, window.location.href);\n    if (publicUrl.origin !== window.location.origin) {\n      // Our service worker won't work if PUBLIC_URL is on a different origin\n      // from what our page is served on. This might happen if a CDN is used to\n      // serve assets; see https://github.com/facebook/create-react-app/issues/2374\n      return;\n    }\n\n    window.addEventListener('load', () => {\n      const swUrl = `${process.env.PUBLIC_URL}/service-worker.js`;\n\n      if (isLocalhost) {\n        // This is running on localhost. Let's check if a service worker still exists or not.\n        checkValidServiceWorker(swUrl, config);\n\n        // Add some additional logging to localhost, pointing developers to the\n        // service worker/PWA documentation.\n        navigator.serviceWorker.ready.then(() => {\n          console.log(\n            'This web app is being served cache-first by a service ' +\n              'worker. To learn more, visit https://bit.ly/CRA-PWA'\n          );\n        });\n      } else {\n        // Is not localhost. Just register service worker\n        registerValidSW(swUrl, config);\n      }\n    });\n  }\n}\n\nfunction registerValidSW(swUrl, config) {\n  navigator.serviceWorker\n    .register(swUrl)\n    .then(registration => {\n      registration.onupdatefound = () => {\n        const installingWorker = registration.installing;\n        if (installingWorker == null) {\n          return;\n        }\n        installingWorker.onstatechange = () => {\n          if (installingWorker.state === 'installed') {\n            if (navigator.serviceWorker.controller) {\n              // At this point, the updated precached content has been fetched,\n              // but the previous service worker will still serve the older\n              // content until all client tabs are closed.\n              console.log(\n                'New content is available and will be used when all ' +\n                  'tabs for this page are closed. See https://bit.ly/CRA-PWA.'\n              );\n\n              // Execute callback\n              if (config && config.onUpdate) {\n                config.onUpdate(registration);\n              }\n            } else {\n              // At this point, everything has been precached.\n              // It's the perfect time to display a\n              // \"Content is cached for offline use.\" message.\n              console.log('Content is cached for offline use.');\n\n              // Execute callback\n              if (config && config.onSuccess) {\n                config.onSuccess(registration);\n              }\n            }\n          }\n        };\n      };\n    })\n    .catch(error => {\n      console.error('Error during service worker registration:', error);\n    });\n}\n\nfunction checkValidServiceWorker(swUrl, config) {\n  // Check if the service worker can be found. If it can't reload the page.\n  fetch(swUrl)\n    .then(response => {\n      // Ensure service worker exists, and that we really are getting a JS file.\n      const contentType = response.headers.get('content-type');\n      if (\n        response.status === 404 ||\n        (contentType != null && contentType.indexOf('javascript') === -1)\n      ) {\n        // No service worker found. Probably a different app. Reload the page.\n        navigator.serviceWorker.ready.then(registration => {\n          registration.unregister().then(() => {\n            window.location.reload();\n          });\n        });\n      } else {\n        // Service worker found. Proceed as normal.\n        registerValidSW(swUrl, config);\n      }\n    })\n    .catch(() => {\n      console.log(\n        'No internet connection found. App is running in offline mode.'\n      );\n    });\n}\n\nexport function unregister() {\n  if ('serviceWorker' in navigator) {\n    navigator.serviceWorker.ready.then(registration => {\n      registration.unregister();\n    });\n  }\n}\n","import React from 'react'\nimport ReactDOM from 'react-dom'\nimport App from './App'\nimport * as serviceWorker from './serviceWorker'\nimport { Provider } from 'react-redux'\nimport store from './store/store'\n\nReactDOM.render(\n\t<Provider store={store}>\n\t\t<App />\n\t</Provider>,\n\tdocument.getElementById('root')\n)\n\n// If you want your app to work offline and load faster, you can change\n// unregister() to register() below. Note this comes with some pitfalls.\n// Learn more about service workers: https://bit.ly/CRA-PWA\nserviceWorker.unregister();\n"],"sourceRoot":""}